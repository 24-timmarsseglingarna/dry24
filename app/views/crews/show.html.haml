- title "Torrsegling med #{@crew.boat_name}"
.wrapper
  .map-wrapper
    .instruments
      .instrument
        .legend
          Time
        .value
          = "#{I18n.l @crew.game_time, :format => :short}"
      .instrument
        .legend#cog
          COG
        .value
          = '%.0f' % @crew.cog + '°'
      .instrument#sog
        .legend
          VMG kt
        .value
          = '%.1f' % @crew.vmg
      .instrument#tw-arrow
        .legend
          TWD
        .value{ :style => "-moz-transform: rotate(#{@crew.twd}deg); -ms-transform: rotate(#{@crew.twd}deg); -webkit-transform: rotate(#{@crew.twd}deg); transform: rotate(#{@crew.twd}deg);"   }
          &#8657;
      .instrument#wd
        .legend
          TWD
        .value
          = '%.0f' % @crew.twd + '°'
      .instrument.dev
        .legend
          TWS m/s
        .value
          = '%.1f' % @crew.tws
    #map

  .control-wrapper
    .control
      %h1.sailing Torrsegling
      - unless @crew.finished
        %p Vart seglar vi nu?
        %ol.where_to
          %li#instruction ⇒ Klicka en punkt i kartan.
          -for section in @sections do
            %li.initially-hidden{:id => "#{section.to_point.id}"}
              =link_to(go_section(section), create_log_entry_crew_url(:to_point_id => section.to_point.id), :method => :post)
        - if @crew.last_point == @crew.start_point && @crew.log_entries.count > 2
          %p.finish
            Du är nu vid start-/målpunkten.
          %p
          - if @crew.game_time > (@crew.start_time + 21.hours)
            .finalize#finalize
              = link_to '⇒ Gå i mål.', finish_crew_path(@crew), :method => :put
          - else
            Du måste segla minst 21 timmar innan du kan gå i mål.
      - else
        %p=link_to 'Börja om?', crews_path


      %h3 Loggbok
      %table.logbook
        %tr
          %th Tid
          %th Händelse
          %th Distans
          %th Vind
        %tr
          %td
          %td Distans:
          %td= @crew.distance_sum.round(1).to_s + ' M'
          %td
            =# Geocoder::Calculations.compass_point(@crew.twd)
            =# @crew.tws.round 0
        - for log_entry in @crew.log_entries.reverse do
          %tr
            %td= I18n.l log_entry.to_time, :format => :long
            %td
              = log_entry.to_point.number_name unless log_entry.to_point.blank?
              = log_entry.description
            %td= log_entry.distance.round(1).to_s + " M"
            %td
              = Geocoder::Calculations.compass_point(log_entry.twd) unless log_entry.twd.blank?
              = log_entry.tws.round unless log_entry.tws.blank?

      %h3 Så här funkar det ...
      %p Svenska Kryssarklubbens 24-timmarsseglingar går ut på att segla så långt som möjligt. Du ska tillbaka till start på 24 timmar. Om du kommer för sent får du distansavdrag.
      %p Du väljer själv väg bland en stor mängd punkter och sträckor. Punkter får rundas max två gånger och sträckor seglas max två gånger.
      %p Varje sträcka har en uppmätt distans som du får räkna, oavsett vilken väg du seglar.
      %p Tips! De flesta båtar är effektivast på halvvind. Kryss ger en låg fart om du inte kan lägga krysslagen mellan rundningspunkter.
      %p För att kunna jämföra olika båtars prestationer använder vi ett handikappsystem som i stort är SRS-tal.
      %p I den här övningen seglar du en Scanmar 33:a. Den har SRS-tal #{@crew.handicap}.
      %p Du har valt att starta #{l(@crew.start_time, :format => :longest)} från #{@crew.start_point.number_name} och skall gå i mål där #{l(@crew.start_time + 1.day, :format => :longest)}.

      %p Seglingarna körs runt hela Sveriges kust, i Vänern och i Mälaren, första helgen i juni och första helgen i september.
      .app-version= "Torrsegling version: #{Rails.configuration.version}"

= render 'map'