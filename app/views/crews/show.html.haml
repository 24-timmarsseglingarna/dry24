- title "Torrsegling med #{@crew.boat_name}"
.wrapper
  .map-wrapper
    - unless @crew.finished
      .instruments
        .instrument
          .legend
            Time
          .value
            = "#{I18n.l @crew.game_time, :format => :short}"
        .instrument
          .legend#cog
            COG
          .value
            = '%.0f' % @crew.cog + '°'
        .instrument#sog
          .legend
            SOG kt
          .value
            = '%.1f' % @crew.sog
        .instrument#vmga
          .legend
            VMG kt
          .value
            = '%.1f' % @crew.vmg_average
        .instrument#tw-arrow
          .legend
            TWD
          .value{ :style => "-moz-transform: rotate(#{@crew.twd}deg); -ms-transform: rotate(#{@crew.twd}deg); -webkit-transform: rotate(#{@crew.twd}deg); transform: rotate(#{@crew.twd}deg);"   }
            &#8659;
        .instrument#wd
          .legend
            TWD
          .value
            = '%.0f' % @crew.twd + '°'
        .instrument.dev
          .legend
            TWS m/s
          .value
            = '%.1f' % @crew.tws
    #map

  .control-wrapper
    .control
      - unless @crew.finished
        %ol.where_to
          %li#instruction
            %p Klicka på en punkt i kartan för att mäta avståndet.
          -for section in @sections do
            %li.initially-hidden{:id => "#{section.to_point.id}"}
              = form_tag create_log_entry_crew_url do
                = hidden_field_tag :to_point_id, section.to_point.id, :id => "to_point_id_#{section.to_point.id}"
                = submit_tag :submit, :value => "#{section.to_point.number_name}", data: { disable_with: "Seglar till #{section.to_point.number}" }, :class => :sail_to
              %p= go_section(section)

        - if @crew.last_point == @crew.start_point && @crew.log_entries.count > 2
          %p.finish
          - if @crew.game_time > (@crew.start_time + 21.hours)
            .finalize#finalize
              = form_tag finish_crew_path, method: :put do
                = hidden_field_tag :id, @crew.id
                = submit_tag :submit, :value => 'Gå i mål', data: { disable_with: 'Firar målgången ...' }
          - else
            Du måste segla minst 21 timmar innan du kan gå i mål.
      - else
        %p
          .restart
            = button_to 'Börja om', new_crew_path, :method => 'get'
      .log-container
        .log.note
          =# image_tag 'android-chrome-48x48.png', :class => 'note-img'
          %h3 Loggbok för 24-timmarssegling
          %table.logbook#log-header
            %tr
              %th Båt:
              %td #{@crew.boat_name}, Scanmar 33.
            %tr
              %th Befälhavare:
              %td #{@crew.captain_name}
            %tr
              %th Distans:
              %td= @crew.distance_sum.round(1).to_s + ' M'

          %table.logbook
            %tr
              %th Tid
              %th Händelse
              %th Distans
              %th Vind
            - for log_entry in @crew.log_entries.reverse do
              %tr
                %td= I18n.l log_entry.to_time, :format => :long
                %td
                  = log_entry.to_point.number_name unless log_entry.to_point.blank?
                  = log_entry.description
                %td= log_entry.distance.round(1).to_s + ' M'
                %td
                  = Geocoder::Calculations.compass_point(log_entry.twd) unless log_entry.twd.blank?
                  = log_entry.tws.round unless log_entry.tws.blank?

        .log.note
          = render 'how_it_works'
        - if !@crew.finished
          %p.exit
            =link_to 'Avsluta och radera den här omgången.', @crew, :method => :delete, :data => { :confirm => "Vill du radera den här seglingen med #{@crew.boat_name}?"}
            .app-version= "Torrsegling version: #{Rails.configuration.version}"

= render 'map'